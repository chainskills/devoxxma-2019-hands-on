{"version":3,"sources":["drizzleOptions.js","components/Account.js","components/Information.js","components/Greetings.js","components/ServiceFee.js","components/Events.js","App.js","index.js"],"names":["drizzleOptions","web3","fallback","type","url","contracts","events","ChainBizz","Account","drizzle","enable","owner","account","balance","useEffect","M","AutoInit","className","diameter","seed","jsNumberForAddress","parseFloat","toFixed","href","style","margin","onClick","Greetings","methods","disableContract","send","from","gas","on","err","console","enableContract","Information","greetings","earnings","serviceFee","utils","fromWei","toBN","transferEarning","refFirstField","useRef","useState","setGreetings","current","focus","ref","name","value","data-length","onChange","e","target","height","htmlFor","error","ServiceFee","newFee","setNewFee","min","step","setServiceFee","toWei","Events","eventGreetings","setEventGreetings","eventServiceFee","setEventServiceFee","Map","eventMap","setEventMap","allEvents","Array","values","reverse","forEach","evt","currentEvent","key","message","push","unsubscribe","event","GreetingsChangedEvent","fromBlock","lastBlock","get","id","eventMessage","returnValues","_account","_greetings","set","NewServiceFeeEvent","_serviceFee","subscribe","App","drizzleContext","drizzleState","initialized","setAccount","setBalance","setOwner","setEarnings","setEnable","greetingsKey","setGreetingsKey","a","currAccout","accounts","eth","getBalance","currBalance","CharacterCounter","init","document","querySelectorAll","getGreetings","cacheCall","getServiceFee","call","address","fetchAccount","window","ethereum","location","reload","currentGreetings","drizzleStore","generateStore","Drizzle","ReactDOM","render","Provider","Consumer","getElementById"],"mappings":"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","file":"static/js/main.e98e73fd.chunk.js","sourcesContent":["import Greetings from \"./contracts/Greetings.json\";\n\nconst drizzleOptions = {\n  web3: {\n    fallback: {\n      type: \"ws\",\n      url: \"ws://127.0.0.1:8545\"\n    }\n  },\n  contracts: [Greetings],\n  events: {\n    ChainBizz: [\"GreetingsChangedEvent\", \"NewServiceFeeEvent\"]\n  }\n};\n\nexport default drizzleOptions;\n","import React, {useEffect} from \"react\";\nimport JazzIcon, {jsNumberForAddress} from \"react-jazzicon\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport \"./Account.css\";\n\nconst Account = ({drizzle, enable, owner, account, balance}) => {\n  useEffect(() => {\n    M.AutoInit();\n\n    // eslint-disable-next-line\n  }, []);\n\n  const disableContract = () => {\n    const {Greetings} = drizzle.contracts;\n    Greetings.methods\n      .disableContract()\n      .send({from: account, gas: 500000})\n      .on(\"error\", err => {\n        console.err(err);\n      });\n  };\n\n  const enableContract = () => {\n    const {Greetings} = drizzle.contracts;\n    Greetings.methods\n      .enableContract()\n      .send({from: account, gas: 500000})\n      .on(\"error\", err => {\n        console.err(err);\n      });\n  };\n\n  return (\n    <div className=\"col m4\">\n      <div className=\"avatar\">\n        <JazzIcon diameter={40} seed={jsNumberForAddress(account)} />\n        <p className=\"account truncate\">{account}</p>\n        <p className=\"balance\">{parseFloat(balance).toFixed(4)} ETH</p>\n        {owner && enable && (\n          <a\n            href=\"#!\"\n            className=\"waves-effect waves-light btn left primary-content blue\"\n            style={{margin: \"5px\"}}\n            onClick={() => disableContract()}\n          >\n            Disable\n          </a>\n        )}\n\n        {owner && !enable && (\n          <a\n            href=\"#!\"\n            className=\"waves-effect waves-light btn left primary-content blue\"\n            style={{margin: \"5px\"}}\n            onClick={() => enableContract()}\n          >\n            Enable\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, {useEffect, useState} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport \"./Account.css\";\n\nconst Information = ({\n  drizzle,\n  greetings,\n  account,\n  earnings,\n  serviceFee,\n  owner\n}) => {\n  useEffect(() => {\n    M.AutoInit();\n\n    // eslint-disable-next-line\n  }, []);\n\n  const onTransferEarning = () => {\n    const {Greetings} = drizzle.contracts;\n\n    Greetings.methods\n      .transferEarning()\n      .send({from: account, gas: 500000})\n      .on(\"data\", err => {\n        console.err(err);\n      });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col m12\">\n        <p>The current greetings is: {greetings}</p>\n      </div>\n      <div className=\"col m12\">\n        <p>\n          The service fee is:{\" \"}\n          {serviceFee !== null\n            ? drizzle.web3.utils.fromWei(serviceFee, \"ether\")\n            : null}{\" \"}\n          ETH\n        </p>\n      </div>\n      {owner && (\n        <div>\n          <div className=\"col m8\">\n            <p>\n              Your earning is:{\" \"}\n              {drizzle.web3.utils.fromWei(\n                drizzle.web3.utils.toBN(earnings),\n                \"ether\"\n              )}{\" \"}\n              ETH\n            </p>\n          </div>\n          {earnings > 0 && (\n            <div className=\"col m3\">\n              <a\n                href=\"#!\"\n                className=\"waves-effect waves-light btn left primary-content blue\"\n                style={{margin: \"5px\"}}\n                onClick={() => onTransferEarning()}\n              >\n                Transfer\n              </a>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Information;\n","import React, {useState, useEffect, useRef} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst Greetings = ({drizzle, account, serviceFee}) => {\n  const refFirstField = useRef(null);\n\n  const [greetings, setGreetings] = useState(\"\");\n\n  useEffect(() => {\n    M.AutoInit();\n\n    // give focus to the first field\n    if (refFirstField !== null) {\n      refFirstField.current.focus();\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  const onChange = e => {\n    setGreetings(e.target.value);\n  };\n\n  const onSaveGreetings = () => {\n    const {Greetings} = drizzle.contracts;\n\n    // save the new greetings\n    Greetings.methods\n      .setGreetings(greetings)\n      .send({from: account, gas: 500000, value: serviceFee})\n      .on(\"error\", err => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s9 input-field\">\n        <textarea\n          className=\"materialize-textarea has-character-counter\"\n          ref={refFirstField}\n          type=\"text\"\n          name=\"message\"\n          value={greetings}\n          data-length={50}\n          onChange={onChange}\n          style={{height: \"4rem\"}}\n        />\n\n        <label htmlFor=\"title\" className=\"active\">\n          Enter a new Greetings\n        </label>\n      </div>\n      <div className=\"col s3 input-field\">\n        <a\n          href=\"#!\"\n          className=\"waves-effect waves-light btn left primary-content blue\"\n          onClick={() => onSaveGreetings()}\n          style={{margin: \"5px\"}}\n        >\n          Send\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Greetings;\n","import React, {useState} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nconst ServiceFee = ({drizzle, account, serviceFee}) => {\n  const [newFee, setNewFee] = useState(\n    drizzle.web3.utils.fromWei(\n      drizzle.web3.utils.toBN(serviceFee !== null ? serviceFee : 0, \"ether\")\n    )\n  );\n\n  const onChange = e => {\n    setNewFee(e.target.value);\n  };\n\n  const onSaveServiceFee = () => {\n    // TODO: Save the new service fee\n\n    // save the new service fee\n    const {Greetings} = drizzle.contracts;\n\n    Greetings.methods\n      .setServiceFee(drizzle.web3.utils.toWei(newFee))\n      .send({from: account, gas: 500000})\n      .on(\"error\", err => {\n        console.err(err);\n      });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col m9 input-field\">\n        <input\n          type=\"number\"\n          name=\"serviceFee\"\n          value={newFee}\n          min={0}\n          onChange={onChange}\n          step={\".01\"}\n        />\n        <label htmlFor=\"price\" className=\"active\">\n          Service fee in ETH\n        </label>\n      </div>\n      <div className=\"col m3 input-field\">\n        <a\n          href=\"#!\"\n          className=\"waves-effect waves-light btn left primary-content blue\"\n          onClick={() => onSaveServiceFee()}\n          style={{margin: \"5px\"}}\n        >\n          Send\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default ServiceFee;\n","import React, {useState} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nconst Events = ({drizzle, owner}) => {\n  const {Greetings} = drizzle.contracts;\n  const [eventGreetings, setEventGreetings] = useState(null);\n  const [eventServiceFee, setEventServiceFee] = useState(null);\n  const [eventMap, setEventMap] = useState(new Map());\n\n  const subscribe = () => {\n    if (eventGreetings === null) {\n      // TODO: Listen to the event when the greetings message changed\n      const event = Greetings.events\n        .GreetingsChangedEvent({\n          fromBlock: \"latest\",\n          lastBlock: \"latest\"\n        })\n        .on(\"data\", function(eventGreetings) {\n          if (typeof eventMap.get(eventGreetings.id) === \"undefined\") {\n            const eventMessage =\n              \"Account: \" +\n              eventGreetings.returnValues._account +\n              \" Greetings: \" +\n              eventGreetings.returnValues._greetings;\n\n            eventMap.set(eventGreetings.id, {\n              key: eventGreetings.id,\n              name: eventGreetings.event,\n              message: eventMessage\n            });\n            setEventMap(eventMap);\n          }\n        })\n        .on(\"error\", function(error) {\n          console.error(error);\n        });\n\n      setEventGreetings(event);\n    }\n\n    if (owner && eventServiceFee === null) {\n      // TODO: Listen to the event when the service fee changed\n\n      const event = Greetings.events\n        .NewServiceFeeEvent({\n          fromBlock: \"latest\",\n          lastBlock: \"latest\"\n        })\n        .on(\"data\", function(eventServiceFee) {\n          if (typeof eventMap.get(eventServiceFee.id) === \"undefined\") {\n            const eventMessage =\n              \"New Service fee: \" +\n              drizzle.web3.utils.fromWei(\n                eventServiceFee.returnValues._serviceFee,\n                \"ether\"\n              );\n\n            eventMap.set(eventServiceFee.id, {\n              key: eventServiceFee.id,\n              name: eventServiceFee.event,\n              message: eventMessage\n            });\n\n            setEventMap(eventMap);\n          }\n        })\n        .on(\"error\", function(error) {\n          console.error(error);\n        });\n\n      setEventServiceFee(event);\n    }\n  };\n\n  const unsubscribe = () => {\n    // TODO: unsubcribe all events\n\n    if (eventGreetings !== null) {\n      eventGreetings.unsubscribe();\n      setEventGreetings(null);\n    }\n\n    if (eventServiceFee !== null) {\n      eventServiceFee.unsubscribe();\n      setEventServiceFee(null);\n    }\n\n    setEventMap(new Map());\n  };\n\n  let allEvents = [];\n  if (eventMap !== null && typeof eventMap !== \"undefined\") {\n    // received a new event\n    const eventsList = Array.from(eventMap.values());\n    eventsList.reverse().forEach(evt => {\n      const currentEvent = (\n        <p key={evt.key}>\n          [<span className=\"notifications-item\">{evt.name}</span>] ->{\" \"}\n          <span>{evt.message}</span>\n        </p>\n      );\n\n      allEvents.push(currentEvent);\n    });\n  }\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col s12 m3 push-m9 input-field\">\n          {eventGreetings !== null && (\n            <a\n              href=\"#!\"\n              className=\"waves-effect waves-light btn right primary-content blue\"\n              style={{margin: \"5px\"}}\n              onClick={() => unsubscribe()}\n            >\n              Unsubscribe\n            </a>\n          )}\n          {eventGreetings === null && (\n            <a\n              href=\"#!\"\n              className=\"waves-effect waves-light btn right primary-content blue\"\n              style={{margin: \"5px\"}}\n              onClick={() => subscribe()}\n            >\n              Subscribe\n            </a>\n          )}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col s12\">{allEvents}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Events;\n","import React, {useState, useEffect} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport Account from \"./components/Account\";\nimport Information from \"./components/Information\";\nimport Greetings from \"./components/Greetings\";\nimport ServiceFee from \"./components/ServiceFee\";\nimport Events from \"./components/Events\";\n\nimport \"./App.css\";\n\nconst App = ({drizzleContext}) => {\n  const {drizzleState, drizzle, initialized} = drizzleContext;\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(0);\n  const [owner, setOwner] = useState(null);\n  const [earnings, setEarnings] = useState(0);\n  const [enable, setEnable] = useState(false);\n\n  const [greetingsKey, setGreetingsKey] = useState(null);\n  const [serviceFee, setServiceFee] = useState(0);\n\n  useEffect(() => {\n    M.AutoInit();\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (initialized) {\n      async function fetchAccount() {\n        const currAccout = drizzleState.accounts[0];\n        const currBalance = await drizzle.web3.eth.getBalance(currAccout);\n\n        setAccount(currAccout);\n        setBalance(drizzle.web3.utils.fromWei(currBalance, \"ether\"));\n\n        M.CharacterCounter.init(\n          document.querySelectorAll(\".has-character-counter\")\n        );\n\n        const {Greetings} = drizzle.contracts;\n\n        // TODO: Initialize state variables\n        setGreetingsKey(Greetings.methods.getGreetings.cacheCall());\n\n        setServiceFee(await Greetings.methods.getServiceFee().call());\n\n        setOwner(await Greetings.methods.owner().call());\n\n        setEarnings(await drizzle.web3.eth.getBalance(Greetings.address));\n\n        setEnable(await Greetings.methods.enable().call());\n      }\n      fetchAccount();\n    }\n    // eslint-disable-next-line\n  }, [initialized, drizzleState]);\n\n  if (!initialized || account === null) {\n    return (\n      <div className=\"container\">\n        <h2>Preparing the Dapp ...</h2>\n      </div>\n    );\n  }\n\n  // detect account changes from Metamask\n  window.ethereum.on(\"accountsChanged\", function(accounts) {\n    // reload the page to refresh all context\n    window.location.reload();\n  });\n\n  // prepare ...\n  let currentGreetings = null;\n  if (greetingsKey !== null) {\n    if (\n      drizzleState.contracts.Greetings.getGreetings[greetingsKey] &&\n      drizzleState.contracts.Greetings.getGreetings[greetingsKey].value\n    ) {\n      currentGreetings =\n        drizzleState.contracts.Greetings.getGreetings[greetingsKey].value;\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Account\n          drizzle={drizzle}\n          enable={enable}\n          account={account}\n          owner={owner === account ? true : false}\n          balance={balance}\n        />\n\n        <div className=\"col m8 greetings-data\">\n          <Information\n            drizzle={drizzle}\n            greetings={currentGreetings}\n            serviceFee={drizzle.web3.utils.toBN(\n              serviceFee !== null ? serviceFee : 0\n            )}\n            account={account}\n            earnings={earnings}\n            owner={owner === account ? true : false}\n          />\n          <Greetings\n            drizzle={drizzle}\n            account={account}\n            serviceFee={drizzle.web3.utils.toBN(\n              serviceFee !== null ? serviceFee : 0\n            )}\n          />\n\n          {owner === account && (\n            <ServiceFee\n              drizzle={drizzle}\n              account={account}\n              serviceFee={drizzle.web3.utils.toBN(\n                serviceFee !== null ? serviceFee : 0\n              )}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col s12 m8 push-m4 greetings-data\">\n          <Events drizzle={drizzle} owner={owner === account ? true : false} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport {DrizzleContext} from \"@drizzle/react-plugin\";\nimport {Drizzle, generateStore} from \"@drizzle/store\";\n\nimport drizzleOptions from \"./drizzleOptions\";\n\nimport App from \"./App\";\n\n// configure drizzle\nconst drizzleStore = generateStore(drizzleOptions);\nconst drizzle = new Drizzle(drizzleOptions, drizzleStore);\n\nReactDOM.render(\n  <DrizzleContext.Provider drizzle={drizzle}>\n    <DrizzleContext.Consumer>\n      {drizzleContext => {\n        return <App drizzleContext={drizzleContext} />;\n      }}\n    </DrizzleContext.Consumer>\n  </DrizzleContext.Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}